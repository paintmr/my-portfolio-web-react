{
  "id": "dev11",
  "name": "React To-Do List",
  "img": "/data/imgs/development/portfolio-reactToDoList.png",
  "urlName": "React To-Do List",
  "url": "https://todolist.bytepalette.com/",
  "description": "This is a to-do list made with React.",
  "tech": "HTML, CSS, JavaScript, React, React-Redux, Redux-Thunk, FontAwesome",
  "generalInfo": [
    "A Store is created to store data.",
    "The Provider from React-Redux connects the Store and the App.",
    "Four UI components are made for user interaction: AddTodo, FilterSetter, TodoList (having a sub-component - Todo), and Alert. The user can add items through AddTodo. The user can choose which to-do list (all, the things to be done, the things finished) to show by clicking the buttons of the FilterSetter component. The user can change the status of the item(active, completed) by clicking the item(Todo) component of the TodoList component.",
    "The AddTodo component can check if the user has entered anything and something that exists. When the user has entered something that exists, an alert layer pops up and then disappears itself after the user is reminded.",
    "Four container components are made to connect Store and the four UI compoents. Each container component uses Connect from React-Redux to connect mapStateToProps and mapDispatchToProps with its corresponding UI component, so that each UI component can use Store data and dispaction actions easily.",
    "Redux-Thunk is used to deal with asynchronous actions. When the TodoList component has mounted, an asynchronous action is dispatched to fetch data from a json file( called todos.json which is placed in the public/mock folder during development). Fetch is used to fetch the data. Then the data are stored in Store and shown by the TodoList component.",
    "Sub-reducers are created based on Store State data: text, filter, todos, and alert."
  ]
}